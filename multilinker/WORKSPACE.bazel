workspace(name = "grafica_rules_nodejs_issues_multilinker")

#
# This statement makes the function `http_archive` available for the
# rest of the file. Bazel gives external dependencies short names
# that begin with an ampersand, and "//" is the workspace root.
#
# This loads the rule at the //tools/.. path from the @bazel_tools
# workspace (this dependency is downloaded by default).
#
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

http_archive(
    name = "build_bazel_rules_nodejs",
    sha256 = "f0f76a06fd6c10e8fb9a6cb9389fa7d5816dbecd9b1685063f89fb20dc6822f3",
    urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/4.5.1/rules_nodejs-4.5.1.tar.gz"],
)

load("@build_bazel_rules_nodejs//:index.bzl", "node_repositories", "yarn_install")

node_repositories(
    package_json = ["//:package.json"],
    node_version = "16.11.7",
)

yarn_install(
    name = "npm",
    package_json = "//:package.json",
    yarn_lock = "//:yarn.lock",
    frozen_lockfile = False,
)

yarn_install(
    name = "npm_ui",
    package_path = "js/ui",
    package_json = "//js/ui:package.json",
    yarn_lock = "//js/ui:yarn.lock",
    frozen_lockfile = False,
)

yarn_install(
    name = "npm_oph",
    package_path = "js/oph",
    package_json = "//js/oph:package.json",
    yarn_lock = "//js/oph:yarn.lock",
    links = {
        "@1password/ui": "//js/ui:ui",
    },
    frozen_lockfile = False,
)